Visit wikipedia page for quick reference.

 10.2 Методы HTTP-запросов GET и POST

Метод GET

- Безопасный (т.е. не меняет ничего на сервере)

- Тело запроса пустое

- Параметры передаются в адресе (query string)
Пример: /index.php&param1=value1&param2=value2&...etc

- Ответ на GET запрос должен содержать тело

- Используется в HTML формах


Метод POST

- Небезопасный

- Тело содержит данные

- Используется в HTML формах

Тело запроса подвергается url кодированию (url encoding)


Данные отправляемые методом POST

1) HTML-формы
 - application/x-www-form-urlencoded (в теле запроса)
 - multipar/form-data 

Для отправки файла нужно в теге форм указать enctype="multipart/form-data"

- text/plain (используется в отладке)

2) Приложения

- application/json
- ...

 10.3 Другие методы HTTP-запросов 

В HTML формах можно использовать только GET и POST методы


Метод PUT 

- предназначен для создания или замены ресурса по конкретному адресу.

 - Небезопасный


Метод Delete

 - Небезопасный


Метод PATCH

- предназначен для частичного обновления ресурса

 - Небезопасный


Метод HEAD

- работает как GET, но без тела ответа.

 - Безопасный


Метод OPTIONS

- Получает информацию о вариантах взаимодействия с сервером или конкретным ресурсом

 - Безопасный


Метод TRACE

- Предназначен для получения клиентом запроса, который в итоге дошел до сервера.

Метод CONNECT

- Предназначен для соединения с сервером


 10.6 HTTP-заголовки 

4 типа http заголовков:
 - Заголовки запроса (request headers)
 - Заголовки ответа (response header)
 - Общие заголовки (general headers)
 - Заголовки данных (entity headers)

 Для информации открыть pdf "HTTP заголовки"


------------------------------------------------------------------




















